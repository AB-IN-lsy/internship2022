========================================Lesson9 ===========================================
1 git简介
2 git的安装
3 git bash命令行
4 仓库的创建与提交
5 在git中忽略文件
===========================================================================================
==== 1 git简介
  1)  版本库（version control system）:
      版本控制系统（VCS）是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。
      使用版本控制系统通常还意味着，就算乱来一气把整个项目中的文件改的改删的删，你也照样可以轻
      松恢复到原先的样子。 但额外增加的工作量却微乎其微。常见的版本库 SVN ,GIT ,VSS 
      
  2) 集中式版本库和分布式的版本库 
       (1) 集中式:如SVN,CVS等 
		   		 有一个集中管理的服务器，保存所有文件的修订版本。而协同工作的人们都通过客户端连接到
		   		 这台服务器，获取最新的文件或者提交更新. 多年以来，这已成为版本控制系统的标准做法。

						好处:
						1、 逻辑明确，符合一般人思维习惯。 
						2、 易于管理，集中式服务器更能保证安全性。
						3、 代码一致性非常高。
						4、 适合开发人数不多的项目开发
						
		       缺陷:
			      单点故障。 
			      如果中心数据库所在的位置发生损坏，又没有做恰当备份， 你将丢失所有数据――包括项目的整
			      个变更历史，只剩下人们在各自机器上保留的单独快照。  
			      

			 (2) 分布式版本控制系统:如 GIT
		   			客户端并不只提取最新版本的文件快照，而是把代码仓库完整地镜像下来。 
		   			任何一处协同工作用的服务器发生故障，事后都可以用任何一个镜像出来的本地仓库恢复。因为每
		   			一次的克隆操作，实际上都是一次对代码仓库的完整备份.
		
						优点:
								1、适合分布式开发，强调个体。 
								2、公共服务器压力和数据量都不会太大。
								3、速度快、灵活。
								4、任意两个开发者之间可以很容易的解决冲突。
								5、离线工作。
				
				   缺点:	
								1、学习周期相对而言比较长。 
								2、不符合常规思维。
								3、代码保密性差，一旦开发者把整个库克隆下来就可以完全公开所有代码和版本信息。
								
								
   3) GIT
				 开源的分布式版本控制系统，用C语言编写
				 Git 与其他的版本控制工具 CVS, SVN，VSS相比，它采用了分布式版本库的方式，可以离线提交代码，
				 代码保存在本地，可以享受SVN联网能进行的一系列操作，如果你需要推送到服务器只需要push一下即可，
				 每个人都是一个独立的仓库。
				 
					1、Git 是分布式的，SVN 不是。
					2、Git 把内容按元数据方式存储，而 SVN 是按文件
					3、Git 分支和 SVN 的分支不同：分支在 SVN 中实就是版本库中的另外一个目录。
					4、Git 没有一个全局的版本号，而 SVN 有
					5、Git 的内容完整性要优于 SVN：Git 的内容存储使用的是 SHA-1 哈希算法。


==== 2 git的安装
		 git官网
		   https://git-scm.com 
		   
      我装的是 Git-2.24.1.2-64-bit.exe
      
      实际上,在安装过程中进行的一些选择,在 D:\Program Files\Git\etc\gitconfig 文件中也是可以进行修改的
      
      打开git命令行的方式
      1) 右键 ,在弹出菜单中点  Git Bash Here
      2) 直接用命令行窗口
      
==== 3 git bash命令行
		可以按住ctl键 ,滚动鼠标滚轮,调整字体大小
		可以用 tab 键进行补全
		可以用 上下箭头翻看执行过的命令
		  >ls  //列出当前目录下的文件
		  >ls -l  //以列表的方式列出当前目录下的内容
		  >ll  //相当于 ls -l
		  >ls -al  //列出当前目录下所有内容,包含隐藏文件
		  
		  >clear  //清屏
		  >touch  //创建文件
		  >pwd  //查看当前位置
		  >cat  //查看文件内容
		  >rm -rf 文件名  //删除
		  
		  vim 文本编辑器的使用
		    1) vim 文件名 进入指令模式,在这个模式下,不能进行编辑
		    2) 按下 i 字符,进入编辑模式,可以进行编辑
		    3) 编辑完成以后,按esc,进入指令模式
		    4) 按 :wq 保存退出
		        wq是保存退出,  q! 表示强制退出
		            
==== 4 仓库的创建与提交
		1) git 的全局配置
		
	   	>git config --global user.name "cat"
	   	>git config --global user.email "732422364@qq.com"
	   	
	   	要注意 user.name 和  user.email 是固定写法,不要写错
	   	这个用户名和邮箱名,主要用于标识是哪个用户,邮箱格式要求不严
	   	
	   	配置完以后,可以用下面的命令查看
	   	>git config --global -l 
	   	   	
	   	实际上,上面的配置,是在用户文件夹(我的电脑是 C:\Users\Administrator ) 中的 .gitconfig 文件中添加了以下内容
	   	[user]
				name = cat
				email = 732422364@qq.com
				
		2) 创建仓库,完成版本的控制
		
				git中的工作区,暂存区,历史区,远程仓库
				
				==工作区: 我们当前工作的目录
				==暂存区: 英文 stage 或index 
				==历史区: 放的就是接受管理的版本了
				==远程仓库: 所有客户端共享的仓库
				
				提交的流程
				工作区 => 暂存区 =>历史区 =>远程仓库
				
				下载的流程
				远程仓库 => 工作区 
				
			  (1) 创建本地仓库
			      >git init 
			        执行完毕以后,会在当前目录下生成一个叫 .git 的隐藏目录
			        千万不要删除,暂存区,历史区,和其他的一些信息都放在这里
			        
			  (2) 编写文件,然后提交到暂存区
	   	      >touch a.java
	   	      >touch b.java
	   	      >touch a.html
	   	      >touch b.html
	   	      >git add a.html   //只把a.html放到暂存区
	   	      >git add *.html   //只把所有以.html结尾的文件放到暂存区
	   	      >git add .        //把所有的文件都放到暂存区
	   	      >git status  //查看哪些文件可以往暂存区中提
	   	                   //红字的,是没有添加到暂存区的,绿色的是添加到暂存区的
	   	                   
	   	  (3) 提交到历史区
	   	      >git commit -m"这里要添加一些说明信息"
	   	            -m 参数后面跟的是一些说明信息,信息和-m之间可以有空格也可以没有
	   	            
	   	            如果提交的时候,不指定 -m参数,它会在提交的时候默认打开vim编辑器,
	   	            我们可以在这里输入注释以后,再进行提交
	   	            
	   	  (4) 查看历史区中的版本
	   	      >git log 查看各个版本
	   	      
	   	      >git log --pretty=oneline  查看各个版本,以精简的方式显示  
								2759539caadfa3071ab97f68587782696cd81544 (HEAD -> master) 04  小李第四次提交,添加了两个jsp文件
								02a906ce0d7c14a585d411dcb457d84b44a508bc 03 小李第三次提交,添加了两个文本文件
								28f661932dc08b85fd6b39456bb6118b15cf4f76 02 小李第二次提交 用的vim编写的提示信息
								b0c0f4e817ab2770586341694638d70537c6e3a8 01 这是小李的第一次提交
								
			  (5) 如何把提交到暂存区的内容撤销
					  >git reset 文件名  把某个文件从暂存区中撤回
					  >git reset  把所有放在暂存区中的文件都撤回
								
==== 5 在git中忽略文件
      有一些文件,虽然在我们的工作区中,但我们不想让它参与版本管理
        可以建一个叫 .gitignore 的文件,把所有不想让git管理的文件或目录写在这里
        在window下不能直接创建这个文件,我们可以用vim编辑器直接创建
        比如
         .gitignore 
         ---------------------------------
					my_self_note.txt
					.settings
					target
					.classpath

									   	            
										
										  
										